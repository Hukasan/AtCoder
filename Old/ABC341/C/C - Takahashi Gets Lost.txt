C - Takahashi Gets Lost
×
コンテスト開始
トヨタ自動車プログラミングコンテスト2024#2（AtCoder Beginner Contest 341）が開始されました。
閉じる
×
コンテスト終了
トヨタ自動車プログラミングコンテスト2024#2（AtCoder Beginner Contest 341）は終了しました。
閉じる
トヨタ自動車プログラミングコンテスト2024#2（AtCoder Beginner Contest 341）
日本語
日本語
English
新規登録
ログイン
コンテスト時間:
2024-02-17(土) 21:00
~
2024-02-17(土) 22:40
(100分)
AtCoderホームへ戻る
トップ
問題
質問
提出結果
すべての提出
順位表
バーチャル順位表
解説
C - Takahashi Gets Lost
解説
/
実行時間制限: 3 sec / メモリ制限: 1024 MB
配点 :
250
250
2
5
0
点
問題文
H
H
H
行
W
W
W
列のグリッドがあります。
グリッドの各マスは
陸
か
海
のどちらかであり、
その情報は
H
H
H
個の長さ
W
W
W
の文字列
S
1
,
S
2
,
…
,
S
H
S_1, S_2, ldots, S_H
S
1
​
,
S
2
​
,
…
,
S
H
​
で与えられます。
上から
i
i
i
行目、左から
j
j
j
列目のマスを
(
i
,
j
)
(i, j)
(
i
,
j
)
で表すと、
S
i
S_i
S
i
​
の
j
j
j
文字目が
.
のときマス
(
i
,
j
)
(i, j)
(
i
,
j
)
は陸であり、
#
のときマス
(
i
,
j
)
(i, j)
(
i
,
j
)
は海です。
ここで、グリッドの外周のマス（すなわち、
i
=
1
i = 1
i
=
1
、
i
=
H
i = H
i
=
H
、
j
=
1
j = 1
j
=
1
、
j
=
W
j = W
j
=
W
のうち少なくとも
1
1
1
個以上を満たすマス
(
i
,
j
)
(i, j)
(
i
,
j
)
）については、すべて海であることが制約として保証されます。
高橋君が乗った宇宙船が、グリッド上のあるマスに不時着してしまいました。
その後、高橋君は
L
、
R
、
U
、
D
のみからなる長さ
N
N
N
の文字列
T
T
T
で表される手順に沿って、グリッド上を
N
N
N
回移動しました。
i
=
1
,
2
,
…
,
N
i = 1, 2, ldots, N
i
=
1
,
2
,
…
,
N
について、
T
T
T
の
i
i
i
文字目は
i
i
i
回目の移動の内容を下記の通り表します。
L
のとき、左に
1
1
1
マス移動したことを表す。すなわち、移動前のマスを
(
i
,
j
)
(i, j)
(
i
,
j
)
とするとき、移動後のマスは
(
i
,
j
−
1
)
(i, j-1)
(
i
,
j
−
1
)
である。
R
のとき、右に
1
1
1
マス移動したことを表す。すなわち、移動前のマスを
(
i
,
j
)
(i, j)
(
i
,
j
)
とするとき、移動後のマスは
(
i
,
j
+
1
)
(i, j+1)
(
i
,
j
+
1
)
である。
U
のとき、上に
1
1
1
マス移動したことを表す。すなわち、移動前のマスを
(
i
,
j
)
(i, j)
(
i
,
j
)
とするとき、移動後のマスは
(
i
−
1
,
j
)
(i-1, j)
(
i
−
1
,
j
)
である。
D
のとき、下に
1
1
1
マス移動したことを表す。すなわち、移動前のマスを
(
i
,
j
)
(i, j)
(
i
,
j
)
とするとき、移動後のマスは
(
i
+
1
,
j
)
(i+1, j)
(
i
+
1
,
j
)
である。
高橋君の移動経路上のマス（不時着したマスおよび現在いるマスを含む）はいずれも海でないことがわかっています。
高橋君が現在いるマスとしてあり得るものの個数を出力してください。
制約
H
,
W
,
N
H, W, N
H
,
W
,
N
は整数
3
≤
H
,
W
≤
500
3 leq H, W leq 500
3
≤
H
,
W
≤
5
0
0
1
≤
N
≤
500
1 leq N leq 500
1
≤
N
≤
5
0
0
T
T
T
は
L
、
R
、
U
、
D
のみからなる長さ
N
N
N
の文字列
S
i
S_i
S
i
​
は
.
と
#
のみからなる長さ
W
W
W
の文字列
高橋君が現在いるマスとしてあり得るものが少なくとも
1
1
1
個存在する。
グリッドの外周のマスはすべて海である。
入力
入力は以下の形式で標準入力から与えられる。
H
H
H
W
W
W
N
N
N
T
T
T
S
1
S_1
S
1
​
S
2
S_2
S
2
​
⋮
vdots
⋮
S
H
S_H
S
H
​
出力
答えを出力せよ。
入力例 1
Copy
Copy
6 7 5
LULDR
#######
#...#.#
##...##
#.#...#
#...#.#
#######
出力例 1
Copy
Copy
2
下記の
2
2
2
つの場合がありえるため、高橋君が現在いるマスとしてあり得るものは
(
3
,
4
)
(3, 4)
(
3
,
4
)
と
(
4
,
5
)
(4, 5)
(
4
,
5
)
の
2
2
2
個です。
マス
(
3
,
5
)
(3, 5)
(
3
,
5
)
に不時着し、
(
3
,
5
)
→
(
3
,
4
)
→
(
2
,
4
)
→
(
2
,
3
)
→
(
3
,
3
)
→
(
3
,
4
)
(3, 5) rightarrow (3, 4) rightarrow (2, 4) rightarrow (2, 3) rightarrow (3, 3) rightarrow (3, 4)
(
3
,
5
)
→
(
3
,
4
)
→
(
2
,
4
)
→
(
2
,
3
)
→
(
3
,
3
)
→
(
3
,
4
)
と移動した場合
マス
(
4
,
6
)
(4, 6)
(
4
,
6
)
に不時着し、
(
4
,
6
)
→
(
4
,
5
)
→
(
3
,
5
)
→
(
3
,
4
)
→
(
4
,
4
)
→
(
4
,
5
)
(4, 6) rightarrow (4, 5) rightarrow (3, 5) rightarrow (3, 4) rightarrow (4, 4) rightarrow (4, 5)
(
4
,
6
)
→
(
4
,
5
)
→
(
3
,
5
)
→
(
3
,
4
)
→
(
4
,
4
)
→
(
4
,
5
)
と移動した場合
入力例 2
Copy
Copy
13 16 9
ULURDLURD
################
##..##.#..####.#
###.#..#.....#.#
#..##..#####.###
#...#..#......##
###.##.#..#....#
##.#####....##.#
###.###.#.#.#..#
######.....##..#
#...#.#.######.#
##..###..#..#.##
#...#.#.#...#..#
################
出力例 2
Copy
Copy
6
Score:
250
250
2
5
0
points
Problem Statement
There is a grid with
H
H
H
rows and
W
W
W
columns.
Each cell of the grid is
land
or
sea
, which is represented by
H
H
H
strings
S
1
,
S
2
,
…
,
S
H
S_1, S_2, ldots, S_H
S
1
​
,
S
2
​
,
…
,
S
H
​
of length
W
W
W
. Let
(
i
,
j
)
(i, j)
(
i
,
j
)
denote the cell at the
i
i
i
-th row from the top and
j
j
j
-th column from the left, and
(
i
,
j
)
(i, j)
(
i
,
j
)
is land if the
j
j
j
-th character of
S
i
S_i
S
i
​
is
.
, and
(
i
,
j
)
(i, j)
(
i
,
j
)
is sea if the character is
#
.
The constraints guarantee that all cells on the perimeter of the grid (that is, the cells
(
i
,
j
)
(i, j)
(
i
,
j
)
that satisfy at least one of
i
=
1
i = 1
i
=
1
,
i
=
H
i = H
i
=
H
,
j
=
1
j = 1
j
=
1
,
j
=
W
j = W
j
=
W
) are sea.
Takahashi's spaceship has crash-landed on a cell in the grid. Afterward, he moved
N
N
N
times on the grid following the instructions represented by a string
T
T
T
of length
N
N
N
consisting of
L
,
R
,
U
, and
D
. For
i
=
1
,
2
,
…
,
N
i = 1, 2, ldots, N
i
=
1
,
2
,
…
,
N
, the
i
i
i
-th character of
T
T
T
describes the
i
i
i
-th move as follows:
L
indicates a move of one cell to the left. That is, if he is at
(
i
,
j
)
(i, j)
(
i
,
j
)
before the move, he will be at
(
i
,
j
−
1
)
(i, j-1)
(
i
,
j
−
1
)
after the move.
R
indicates a move of one cell to the right. That is, if he is at
(
i
,
j
)
(i, j)
(
i
,
j
)
before the move, he will be at
(
i
,
j
+
1
)
(i, j+1)
(
i
,
j
+
1
)
after the move.
U
indicates a move of one cell up. That is, if he is at
(
i
,
j
)
(i, j)
(
i
,
j
)
before the move, he will be at
(
i
−
1
,
j
)
(i-1, j)
(
i
−
1
,
j
)
after the move.
D
indicates a move of one cell down. That is, if he is at
(
i
,
j
)
(i, j)
(
i
,
j
)
before the move, he will be at
(
i
+
1
,
j
)
(i+1, j)
(
i
+
1
,
j
)
after the move.
It is known that all cells along his path (including the cell where he crash-landed and the cell he is currently on) are not sea. Print the number of cells that could be his current position.
Constraints
H
H
H
,
W
W
W
, and
N
N
N
are integers.
3
≤
H
,
W
≤
500
3 leq H, W leq 500
3
≤
H
,
W
≤
5
0
0
1
≤
N
≤
500
1 leq N leq 500
1
≤
N
≤
5
0
0
T
T
T
is a string of length
N
N
N
consisting of
L
,
R
,
U
, and
D
.
S
i
S_i
S
i
​
is a string of length
W
W
W
consisting of
.
and
#
.
There is at least one cell that could be Takahashi's current position.
All cells on the perimeter of the grid are sea.
Input
The input is given from Standard Input in the following format:
H
H
H
W
W
W
N
N
N
T
T
T
S
1
S_1
S
1
​
S
2
S_2
S
2
​
⋮
vdots
⋮
S
H
S_H
S
H
​
Output
Print the answer.
Sample Input 1
Copy
Copy
6 7 5
LULDR
#######
#...#.#
##...##
#.#...#
#...#.#
#######
Sample Output 1
Copy
Copy
2
The following two cases are possible, so there are two cells that could be Takahashi's current position:
(
3
,
4
)
(3, 4)
(
3
,
4
)
and
(
4
,
5
)
(4, 5)
(
4
,
5
)
.
He crash-landed on cell
(
3
,
5
)
(3, 5)
(
3
,
5
)
and moved
(
3
,
5
)
→
(
3
,
4
)
→
(
2
,
4
)
→
(
2
,
3
)
→
(
3
,
3
)
→
(
3
,
4
)
(3, 5) rightarrow (3, 4) rightarrow (2, 4) rightarrow (2, 3) rightarrow (3, 3) rightarrow (3, 4)
(
3
,
5
)
→
(
3
,
4
)
→
(
2
,
4
)
→
(
2
,
3
)
→
(
3
,
3
)
→
(
3
,
4
)
.
He crash-landed on cell
(
4
,
6
)
(4, 6)
(
4
,
6
)
and moved
(
4
,
6
)
→
(
4
,
5
)
→
(
3
,
5
)
→
(
3
,
4
)
→
(
4
,
4
)
→
(
4
,
5
)
(4, 6) rightarrow (4, 5) rightarrow (3, 5) rightarrow (3, 4) rightarrow (4, 4) rightarrow (4, 5)
(
4
,
6
)
→
(
4
,
5
)
→
(
3
,
5
)
→
(
3
,
4
)
→
(
4
,
4
)
→
(
4
,
5
)
.
Sample Input 2
Copy
Copy
13 16 9
ULURDLURD
################
##..##.#..####.#
###.#..#.....#.#
#..##..#####.###
#...#..#......##
###.##.#..#....#
##.#####....##.#
###.###.#.#.#..#
######.....##..#
#...#.#.######.#
##..###..#..#.##
#...#.#.#...#..#
################
Sample Output 2
Copy
Copy
6
Facebook
Twitter
Hatena
共有
ルール
用語集
利用規約
プライバシーポリシー
個人情報保護方針
企業情報
よくある質問
お問い合わせ
資料請求
Copyright Since 2012 ©
AtCoder Inc.
All rights reserved.
2024-02-20 (火)
23:02:20 +09:00
ページトップ
✓
共有ありがとう
AddToAny
もっと